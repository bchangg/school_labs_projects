PROGRAM NAME: Connect Four
AUTHOR: Brian Chang, Student #100291105

PURPOSE:
    This is a game of connect four. Whoever first lines up four chips in a row in any direction, wins.

REQUIRED PACKAGES:
    This program imports the java.util.Scanner package.

CLASSES:
    There is only one class, called ConnectFour, and it contains the main method.

INPUT FORMAT:
    The two players will be prompted to enter a number for the column they want to drop a chip into, as follows:
        Please select a column (1-7) to drop a Yellow chip into:
        or
        Please select a column (1-7) to drop a Red chip into:
    In response to the prompt, the current player should type a number between 1-7, inclusive, and then press the enter key. Example as follows:
        3


OUTPUT FORMAT:
    The output will display the current state of the board, with the player's chip filled in.

LIMITATIONS:
    Program has no known limitations.

IMPROVEMENTS:
    Only able to detect the win conditions for when the winning player makes a vertical or horizontal connection of 4 repeating chips. Diagonal ones are yet undetectable.

BUGS:
    Only able to detect the win conditions for when the winning player makes a vertical or horizontal connection of 4 repeating chips. Diagonal ones are yet undetectable.

ALGORITHM:
    --Inputs--
        * colChoice - column that the player wants to drop the chip into
    --Variables--
        * board - keeps track of the state of each player's moves
        * gameFrame - sets up the frame for the board, with the column dividers
        * columnFill - keeps track of how many chips are in each column
        * currentRow - keeps track of the current row we're filling in
    --Steps--
        1. Get colChoice.
        2. Drop a chip into colChoice column.
            2.1. Check if the current column is full, if not, add a chip to the current row, at column colChoice
            2.2. If the column is full, prompt the user to enter another column choice, then check if that column is full.
        3. Repeat until one of the players wins.
    --Outputs--
        * the board and gameFrame, printed in a way that it looks like a Connect Four board

ACKNOWLEDGEMENTS:
